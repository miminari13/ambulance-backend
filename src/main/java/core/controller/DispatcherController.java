package core.controller;

import core.model.Dispatcher;
import core.repository.DispatcherRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/dispatchers")
public class DispatcherController {
    @Autowired // This means to get the bean called dispatcherRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private DispatcherRepository dispatcherRepository;

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Dispatcher> getAllDispatchers() {
        // This returns a JSON or XML with the users
        return dispatcherRepository.findAll();
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewDispatcher (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Dispatcher n = new Dispatcher();
        n.setName(name);
        n.setEmail(email);
        dispatcherRepository.save(n);
        return "Dispatcher saved";
    }

    /* /dispatcher/name?v=1 */
    /* @RequestMapping(value = "/{name}", method = RequestMethod.GET)
    public DispatcherAddResponse DispatcherName(@PathVariable String name, @RequestParam(value = "v", required = false) Integer version) {
        DispatcherAddResponse response = new DispatcherAddResponse();

        if (version == null) {
            response.setName("Unknown version");
        } else {
            response.setName("Диспетчер - "+ name);
        }

        return response;
    }*/
}
